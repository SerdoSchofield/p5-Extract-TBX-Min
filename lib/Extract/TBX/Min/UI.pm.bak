#!/usr/bin/perl -w -- 
#
# generated by wxGlade 0.7.2 on Thu Nov 10 14:04:08 2016
#
# To get wxPerl visit http://www.wxperl.it
#

use Wx 0.15 qw[:allclasses];
use strict;

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package MyFrame;

use Wx qw[:everything];
use base qw(Wx::Frame);
use strict;

use Wx::Locale gettext => '_T';
sub new {
    my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $title  = ""                 unless defined $title;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    # begin wxGlade: MyFrame::new
    $self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
    $self->{check_list_box_1} = Wx::CheckListBox->new($self, wxID_ANY, wxDefaultPosition, wxDefaultSize, [], );
    $self->{label_2} = Wx::StaticText->new($self, wxID_ANY, _T("Default TBX-Min Data Categories"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTER);
    $self->{cb_subjectField} = Wx::CheckBox->new($self, wxID_ANY, _T("subjectField"));
    $self->{cb_termStatus} = Wx::CheckBox->new($self, wxID_ANY, _T("termStatus"));
    $self->{cb_customer} = Wx::CheckBox->new($self, wxID_ANY, _T("customer"));
    $self->{cb_pos} = Wx::CheckBox->new($self, wxID_ANY, _T("partOfSpeech"));
    $self->{label_1} = Wx::StaticText->new($self, wxID_ANY, _T("Other Data Categories"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTER);
    $self->{check_list_box_2} = Wx::CheckListBox->new($self, wxID_ANY, wxDefaultPosition, wxDefaultSize, [], );
    $self->{label_3} = Wx::StaticText->new($self, wxID_ANY, _T("Creator:"));
    $self->{text_ctrl_1} = Wx::TextCtrl->new($self, wxID_ANY, "");
    $self->{label_4} = Wx::StaticText->new($self, wxID_ANY, _T("License"));
    $self->{text_ctrl_2} = Wx::TextCtrl->new($self, wxID_ANY, "");
    $self->{label_5} = Wx::StaticText->new($self, wxID_ANY, _T("*Directionality:"));
    $self->{combo_box_1} = Wx::ComboBox->new($self, wxID_ANY, "", wxDefaultPosition, wxDefaultSize, [_T("monodirectional"), _T("bidirectional")], wxCB_DROPDOWN);
    $self->{label_6} = Wx::StaticText->new($self, wxID_ANY, _T("Description:"));
    $self->{text_ctrl_3} = Wx::TextCtrl->new($self, wxID_ANY, "");
    $self->{label_7} = Wx::StaticText->new($self, wxID_ANY, _T("* indicates required"));
    $self->{button_extract} = Wx::Button->new($self, wxID_ANY, _T("Extract"));

    $self->__set_properties();
    $self->__do_layout();

    # end wxGlade
    return $self;

}


sub __set_properties {
    my $self = shift;
    # begin wxGlade: MyFrame::__set_properties
    $self->SetTitle(_T("TBX-Basic to TBX-Min Extractor"));
    my $icon = &Wx::wxNullIcon;
    $icon->CopyFromBitmap(Wx::Bitmap->new("Z:\\Users\\Serdo\\git\\p5-Extract-TBX-Min\\wx\\tbx_icon.png", wxBITMAP_TYPE_ANY));
    $self->SetIcon($icon);
    $self->{check_list_box_1}->SetMinSize(Wx::Size->new(399, 100));
    $self->{label_2}->SetMinSize(Wx::Size->new(220, 20));
    $self->{cb_subjectField}->SetMinSize(Wx::Size->new(150, 25));
    $self->{cb_subjectField}->SetValue(1);
    $self->{cb_termStatus}->SetMinSize(Wx::Size->new(100, 25));
    $self->{cb_termStatus}->SetValue(1);
    $self->{cb_customer}->SetMinSize(Wx::Size->new(100, 25));
    $self->{cb_customer}->SetValue(1);
    $self->{cb_pos}->SetMinSize(Wx::Size->new(100, 25));
    $self->{cb_pos}->SetValue(1);
    $self->{label_1}->SetMinSize(Wx::Size->new(216, 20));
    $self->{check_list_box_2}->SetMinSize(Wx::Size->new(175, 120));
    $self->{label_3}->SetMinSize(Wx::Size->new(78, 15));
    $self->{text_ctrl_1}->SetMinSize(Wx::Size->new(250, 23));
    $self->{label_4}->SetMinSize(Wx::Size->new(78, 15));
    $self->{text_ctrl_2}->SetMinSize(Wx::Size->new(250, 23));
    $self->{combo_box_1}->SetSelection(1);
    $self->{label_6}->SetMinSize(Wx::Size->new(78, 15));
    $self->{text_ctrl_3}->SetMinSize(Wx::Size->new(358, 162));
    $self->{button_extract}->SetMinSize(Wx::Size->new(100, 25));
    # end wxGlade
}

sub __do_layout {
    my $self = shift;
    # begin wxGlade: MyFrame::__do_layout
    $self->{sizer_8} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_9} = Wx::StaticBoxSizer->new(Wx::StaticBox->new($self, wxID_ANY, _T("Define Header Variables:")), wxVERTICAL);
    $self->{sizer_10} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_15} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_14} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_13} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_12} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_11} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_3} = Wx::StaticBoxSizer->new(Wx::StaticBox->new($self, wxID_ANY, _T("Select Languages and Data Categories to Export")), wxVERTICAL);
    $self->{sizer_4} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_6} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_7} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_8_copy} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_5} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_3}->Add($self->{check_list_box_1}, 0, wxEXPAND, 0);
    $self->{sizer_3}->Add(20, 20, 0, wxEXPAND, 0);
    $self->{sizer_4}->Add(10, 100, 0, wxEXPAND, 0);
    $self->{sizer_5}->Add($self->{label_2}, 0, wxEXPAND, 0);
    $self->{sizer_5}->Add($self->{cb_subjectField}, 0, wxALIGN_CENTER|wxALL|wxEXPAND, 3);
    $self->{sizer_5}->Add($self->{cb_termStatus}, 0, wxALIGN_CENTER|wxALL|wxEXPAND, 5);
    $self->{sizer_5}->Add($self->{cb_customer}, 0, wxALL|wxEXPAND, 5);
    $self->{sizer_5}->Add($self->{cb_pos}, 0, wxALL|wxEXPAND, 5);
    $self->{sizer_4}->Add($self->{sizer_5}, 1, 0, 0);
    $self->{sizer_7}->Add($self->{label_1}, 0, wxEXPAND, 0);
    $self->{sizer_8_copy}->Add(20, 20, 0, wxEXPAND, 0);
    $self->{sizer_8_copy}->Add($self->{check_list_box_2}, 0, wxEXPAND, 0);
    $self->{sizer_8_copy}->Add(20, 20, 0, wxEXPAND, 0);
    $self->{sizer_7}->Add($self->{sizer_8_copy}, 1, 0, 0);
    $self->{sizer_6}->Add($self->{sizer_7}, 1, 0, 0);
    $self->{sizer_4}->Add($self->{sizer_6}, 1, 0, 0);
    $self->{sizer_3}->Add($self->{sizer_4}, 1, 0, 0);
    $self->{sizer_3}->Add(20, 20, 0, wxEXPAND, 0);
    $self->{sizer_8}->Add($self->{sizer_3}, 1, 0, 0);
    $self->{sizer_11}->Add($self->{label_3}, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT, 4);
    $self->{sizer_11}->Add($self->{text_ctrl_1}, 0, 0, 0);
    $self->{sizer_10}->Add($self->{sizer_11}, 0, 0, 0);
    $self->{sizer_12}->Add($self->{label_4}, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT, 4);
    $self->{sizer_12}->Add($self->{text_ctrl_2}, 0, 0, 0);
    $self->{sizer_10}->Add($self->{sizer_12}, 0, 0, 0);
    $self->{sizer_13}->Add($self->{label_5}, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT, 4);
    $self->{sizer_13}->Add($self->{combo_box_1}, 0, 0, 0);
    $self->{sizer_10}->Add($self->{sizer_13}, 0, 0, 0);
    $self->{sizer_14}->Add($self->{label_6}, 0, wxLEFT|wxRIGHT|wxTOP, 4);
    $self->{sizer_14}->Add($self->{text_ctrl_3}, 0, 0, 0);
    $self->{sizer_10}->Add($self->{sizer_14}, 0, 0, 0);
    $self->{sizer_15}->Add($self->{label_7}, 0, wxLEFT|wxTOP, 5);
    $self->{sizer_10}->Add($self->{sizer_15}, 1, 0, 0);
    $self->{sizer_9}->Add($self->{sizer_10}, 0, 0, 0);
    $self->{sizer_9}->Add(20, 20, 0, wxEXPAND, 0);
    $self->{sizer_9}->Add($self->{button_extract}, 0, wxALIGN_RIGHT, 0);
    $self->{sizer_8}->Add($self->{sizer_9}, 1, 0, 0);
    $self->SetSizer($self->{sizer_8});
    $self->{sizer_8}->Fit($self);
    $self->Layout();
    # end wxGlade
}

# end of class MyFrame

1;

package Extract::TBX::Min::UI;

use base qw(Wx::App);
use strict;

sub OnInit {
    my( $self ) = shift;

    Wx::InitAllImageHandlers();

    my $frame_1 = MyFrame->new();

    $self->SetTopWindow($frame_1);
    $frame_1->Show(1);

    return 1;
}
# end of class Extract::TBX::Min::UI

package main;

unless(caller){
    my $local = Wx::Locale->new("English", "en", "en"); # replace with ??
    $local->AddCatalog("ExtractTBXMinUI"); # replace with the appropriate catalog name

    my $ExtractTBXMinUI = Extract::TBX::Min::UI->new();
    $ExtractTBXMinUI->MainLoop();
}
